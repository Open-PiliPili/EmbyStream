server {
    listen 80;
    listen [::]:80;

    server_name frontend.example.com; # Replace frontend domain
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2  on;

    server_name frontend.example.com; # Replace frontend domain

    ssl_session_timeout 30m;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_certificate /etc/ca-certificates/frontend.pem; # Replace frontend ssl certificate
    ssl_certificate_key /etc/ca-certificates/frontend.key; # Replace frontend ssl certificate key
    ssl_session_cache shared:SSL:10m;

    client_max_body_size 100M;

    add_header 'Referrer-Policy' 'origin-when-cross-origin';
    add_header Strict-Transport-Security "max-age=15552000; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    location = / {
        return 302 web/index.html;
    }

    location ~* \.(webp|jpg|jpeg|png|gif|ico|css|js|html)$|Images|fonts {
        proxy_pass http://127.0.0.1:8096;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        expires 10y;
        add_header Pragma "public";
        add_header Cache-Control "public";
    }

    location ~* /(socket|embywebsocket) {
        proxy_pass http://127.0.0.1:8096; # Replace port if needed
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_cache off;
    }

    location / {
        proxy_pass http://127.0.0.1:8096; # Replace port if needed
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        proxy_hide_header X-Powered-By;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_buffering off;
    }

    location ~* ^/(?:emby/)?videos/([a-zA-Z0-9_-]+)(?:/(?:original|stream)(?:.[a-zA-Z0-9]+)?|/[a-zA-Z0-9_-]+.m3u8)$ {
        set $backend "http://127.0.0.1:8096"; # Replace port if needed
        if ($host !~* embyvip) {
            set $backend "http://127.0.0.1:60001"; # Replace frontend port according frontend config toml
        }

        proxy_pass $backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        proxy_hide_header X-Powered-By;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_buffering off;
    }

    location ~ ^/(emby/)?Playlists {
        if ($request_method = POST) {
            return 200 '{"Id": "1000000000"}';
        }
        return 403;
    }

    location ~ ^/(emby/)?Playlists/(\w+)/Items$ {
        if ($request_method = POST) {
            return 200 '';
        }
        return 403;
    }

    location ~ ^/(emby/)?Playlists/(\w+)/Items/(\w+)$ {
        if ($request_method = DELETE) {
            return 200 '';
        }
        return 403;
    }

    location ~ ^/(emby/)?Playlists/(\w+)/Items$ {
        if ($request_method = GET) {
            return 200 '{"Items":[],"TotalRecordCount":0}';
        }
        return 403;
    }

    location ~ ^/(emby/)?Playlists/(\w+)/Items/(\w+)/Move/(\w+)$ {
        if ($request_method = POST) {
            return 200 '';
        }
        return 403;
    }
}